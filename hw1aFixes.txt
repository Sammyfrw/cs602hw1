You can prevent changes to the module data by using a constructor pattern in the export. By returning a new data set of employees when the module is exported, you can avoid hardcoded access to the employee array through object references. This is because the new data set is created in the importing module, so references to this data set is local to the module. In this way, when you take a single object out of the employee array, the object needs to be stored in a separate variable in a different part of memory from any other module that might be importing the employeeModule. Thus, when it is modified, it does not affect any other employee arrays by not referencing the same objects in memory.

This ability to change module data happens in both the lookupByID function and the lookupByLastName function for this reason. lookupByID returns the reference to the object in question (in this case, the employee with an ID of 2). lookupByLastName returns an array consisting of all these object references to the employeeModule data. 